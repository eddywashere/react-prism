module.exports=function(n){function e(a){if(t[a])return t[a].exports;var r=t[a]={exports:{},id:a,loaded:!1};return n[a].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var t={};return e.m=n,e.c=t,e.p="",e(0)}([function(n,e,t){n.exports=t(5)},function(n,e){n.exports=require("react")},function(n,e,t){"use strict";function a(n){return n&&n.__esModule?n["default"]:n}Object.defineProperty(e,"__esModule",{value:!0});var r=t(6);e.PrismCode=a(r)},function(n,e,t){"use strict";function a(n){return n&&n.__esModule?n:{"default":n}}function r(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function o(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(n,e):n.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function n(n,e){for(var t=0;t<e.length;t++){var a=e[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(e,t,a){return t&&n(e.prototype,t),a&&n(e,a),e}}(),s=function(n,e,t){for(var a=!0;a;){var r=n,o=e,i=t;s=c=l=void 0,a=!1,null===r&&(r=Function.prototype);var s=Object.getOwnPropertyDescriptor(r,o);if(void 0!==s){if("value"in s)return s.value;var l=s.get;return void 0===l?void 0:l.call(i)}var c=Object.getPrototypeOf(r);if(null===c)return void 0;n=c,e=o,t=i,a=!0}},l=t(1),c=a(l),u=t(11),p=a(u),g=t(2),f=t(4),d=a(f),m=function(n){function e(){r(this,e),s(Object.getPrototypeOf(e.prototype),"constructor",this).apply(this,arguments)}return o(e,n),i(e,[{key:"render",value:function(){var n=this.props,e=(this.state,n.intervalSeconds);return c["default"].createElement("div",{className:"container-fluid container--full-height"},c["default"].createElement(p["default"],{position:"right",color:"black",href:"https://github.com/tomchentw/react-prism"},"Fork me on GitHub"),c["default"].createElement("div",{className:"row row--full-height"},c["default"].createElement("div",{className:"col-xs-6"},c["default"].createElement("h2",null,"Demo of SelfUpdatedCode",c["default"].createElement("br",null),c["default"].createElement("small",null,"update every ",e," seconds")),c["default"].createElement("pre",null,c["default"].createElement(d["default"],{intervalMillis:1e3*e}))),c["default"].createElement("div",{className:"col-xs-6"},c["default"].createElement("h2",null,"Usage of PrismCode",c["default"].createElement("br",null),c["default"].createElement("small",null,"by creating a component SelfUpdatedCode")),c["default"].createElement("pre",null,c["default"].createElement(g.PrismCode,{className:"language-javascript"},t(8))))))}}],[{key:"propTypes",value:{intervalSeconds:l.PropTypes.number.isRequired},enumerable:!0},{key:"defaultProps",value:{intervalSeconds:2},enumerable:!0}]),e}(c["default"].Component);e["default"]=m,n.exports=e["default"]},function(n,e,t){"use strict";function a(n){return n&&n.__esModule?n:{"default":n}}function r(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function o(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(n,e):n.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function n(n,e){for(var t=0;t<e.length;t++){var a=e[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(e,t,a){return t&&n(e.prototype,t),a&&n(e,a),e}}(),s=function(n,e,t){for(var a=!0;a;){var r=n,o=e,i=t;s=c=l=void 0,a=!1,null===r&&(r=Function.prototype);var s=Object.getOwnPropertyDescriptor(r,o);if(void 0!==s){if("value"in s)return s.value;var l=s.get;return void 0===l?void 0:l.call(i)}var c=Object.getPrototypeOf(r);if(null===c)return void 0;n=c,e=o,t=i,a=!0}},l=t(1),c=a(l),u=t(2),p=[{className:"language-javascript",codeBlock:t(7)},{className:"language-css",codeBlock:t(10)},{className:"language-markup",codeBlock:t(9)}],g=p.length,f=function(n){function e(){r(this,e);for(var n=arguments.length,t=Array(n),a=0;n>a;a++)t[a]=arguments[a];s(Object.getPrototypeOf(e.prototype),"constructor",this).apply(this,t),this.state={_index:0,_intervalId:null}}return o(e,n),i(e,null,[{key:"propTypes",get:function(){return{intervalMillis:c["default"].PropTypes.number.isRequired}}}]),i(e,[{key:"componentDidMount",value:function(){this._setInterval()}},{key:"componentWillReceiveProps",value:function(n){n.intervalMillis!==this.props.intervalMillis&&(this._clearInterval(),this.setState({_intervalId:null}))}},{key:"componentDidUpdate",value:function(){this._setInterval()}},{key:"componentWillUnmount",value:function(){this._clearInterval()}},{key:"_setInterval",value:function(){var n=this;if(null===this.state._intervalId){var e=setInterval(function(){n.setState({_index:(n.state._index+1)%g})},this.props.intervalMillis);this.setState({_intervalId:e})}}},{key:"_clearInterval",value:function(){clearInterval(this.state._intervalId)}},{key:"render",value:function(){var n=(this.props,this.state),e=p[n._index],t=e.className,a=e.codeBlock;return c["default"].createElement(u.PrismCode,{className:t},a)}}]),e}(c["default"].Component);e["default"]=f,n.exports=e["default"]},function(n,e,t){"use strict";function a(n){return n&&n.__esModule?n:{"default":n}}Object.defineProperty(e,"__esModule",{value:!0});var r=t(3),o=a(r);e["default"]=o["default"],n.exports=e["default"]},function(n,e,t){"use strict";function a(n){return n&&n.__esModule?n:{"default":n}}function r(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function o(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(n,e):n.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function n(n,e){for(var t=0;t<e.length;t++){var a=e[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(e,t,a){return t&&n(e.prototype,t),a&&n(e,a),e}}(),s=function(n,e,t){for(var a=!0;a;){var r=n,o=e,i=t;s=c=l=void 0,a=!1,null===r&&(r=Function.prototype);var s=Object.getOwnPropertyDescriptor(r,o);if(void 0!==s){if("value"in s)return s.value;var l=s.get;return void 0===l?void 0:l.call(i)}var c=Object.getPrototypeOf(r);if(null===c)return void 0;n=c,e=o,t=i,a=!0}},l=t(1),c=a(l),u=t(12),p=a(u),g=function(n){function e(){r(this,e),s(Object.getPrototypeOf(e.prototype),"constructor",this).apply(this,arguments),this.shouldComponentUpdate=p["default"]}return o(e,n),i(e,[{key:"componentDidMount",value:function(){this._hightlight()}},{key:"componentDidUpdate",value:function(){this._hightlight()}},{key:"_hightlight",value:function(){Prism.highlightElement(this.refs.code,this.props.async)}},{key:"render",value:function(){return c["default"].createElement("code",{ref:"code",className:this.props.className},this.props.children)}}],[{key:"propTypes",value:{async:l.PropTypes.bool},enumerable:!0}]),e}(l.Component);e["default"]=g,n.exports=e["default"]},function(n,e){n.exports="\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n	? window   // if in browser\n	: (\n		(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n		? self // if in worker\n		: {}   // if in node js\n	);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function(){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\n\nvar _ = _self.Prism = {\n	util: {\n		encode: function (tokens) {\n			if (tokens instanceof Token) {\n				return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n			} else if (_.util.type(tokens) === 'Array') {\n				return tokens.map(_.util.encode);\n			} else {\n				return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n			}\n		},\n\n		type: function (o) {\n			return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n		},\n\n		// Deep clone a language definition (e.g. to extend it)\n		clone: function (o) {\n			var type = _.util.type(o);\n\n			switch (type) {\n				case 'Object':\n					var clone = {};\n\n					for (var key in o) {\n						if (o.hasOwnProperty(key)) {\n							clone[key] = _.util.clone(o[key]);\n						}\n					}\n\n					return clone;\n\n				case 'Array':\n					// Check for existence for IE8\n					return o.map && o.map(function(v) { return _.util.clone(v); });\n			}\n\n			return o;\n		}\n	},\n\n	languages: {\n		extend: function (id, redef) {\n			var lang = _.util.clone(_.languages[id]);\n\n			for (var key in redef) {\n				lang[key] = redef[key];\n			}\n\n			return lang;\n		},\n\n		/**\n		 * Insert a token before another token in a language literal\n		 * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n		 * we cannot just provide an object, we need anobject and a key.\n		 * @param inside The key (or language id) of the parent\n		 * @param before The key to insert before. If not provided, the function appends instead.\n		 * @param insert Object with the key/value pairs to insert\n		 * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n		 */\n		insertBefore: function (inside, before, insert, root) {\n			root = root || _.languages;\n			var grammar = root[inside];\n			\n			if (arguments.length == 2) {\n				insert = arguments[1];\n				\n				for (var newToken in insert) {\n					if (insert.hasOwnProperty(newToken)) {\n						grammar[newToken] = insert[newToken];\n					}\n				}\n				\n				return grammar;\n			}\n			\n			var ret = {};\n\n			for (var token in grammar) {\n\n				if (grammar.hasOwnProperty(token)) {\n\n					if (token == before) {\n\n						for (var newToken in insert) {\n\n							if (insert.hasOwnProperty(newToken)) {\n								ret[newToken] = insert[newToken];\n							}\n						}\n					}\n\n					ret[token] = grammar[token];\n				}\n			}\n			\n			// Update references in other language definitions\n			_.languages.DFS(_.languages, function(key, value) {\n				if (value === root[inside] && key != inside) {\n					this[key] = ret;\n				}\n			});\n\n			return root[inside] = ret;\n		},\n\n		// Traverse a language definition with Depth First Search\n		DFS: function(o, callback, type) {\n			for (var i in o) {\n				if (o.hasOwnProperty(i)) {\n					callback.call(o, i, o[i], type || i);\n\n					if (_.util.type(o[i]) === 'Object') {\n						_.languages.DFS(o[i], callback);\n					}\n					else if (_.util.type(o[i]) === 'Array') {\n						_.languages.DFS(o[i], callback, i);\n					}\n				}\n			}\n		}\n	},\n	plugins: {},\n	\n	highlightAll: function(async, callback) {\n		var elements = document.querySelectorAll('code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code');\n\n		for (var i=0, element; element = elements[i++];) {\n			_.highlightElement(element, async === true, callback);\n		}\n	},\n\n	highlightElement: function(element, async, callback) {\n		// Find language\n		var language, grammar, parent = element;\n\n		while (parent && !lang.test(parent.className)) {\n			parent = parent.parentNode;\n		}\n\n		if (parent) {\n			language = (parent.className.match(lang) || [,''])[1];\n			grammar = _.languages[language];\n		}\n\n		// Set language on the element, if not present\n		element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n		// Set language on the parent, for styling\n		parent = element.parentNode;\n\n		if (/pre/i.test(parent.nodeName)) {\n			parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n		}\n\n		var code = element.textContent;\n\n		var env = {\n			element: element,\n			language: language,\n			grammar: grammar,\n			code: code\n		};\n\n		if (!code || !grammar) {\n			_.hooks.run('complete', env);\n			return;\n		}\n\n		_.hooks.run('before-highlight', env);\n\n		if (async && _self.Worker) {\n			var worker = new Worker(_.filename);\n\n			worker.onmessage = function(evt) {\n				env.highlightedCode = evt.data;\n\n				_.hooks.run('before-insert', env);\n\n				env.element.innerHTML = env.highlightedCode;\n\n				callback && callback.call(env.element);\n				_.hooks.run('after-highlight', env);\n				_.hooks.run('complete', env);\n			};\n\n			worker.postMessage(JSON.stringify({\n				language: env.language,\n				code: env.code,\n				immediateClose: true\n			}));\n		}\n		else {\n			env.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\n			_.hooks.run('before-insert', env);\n\n			env.element.innerHTML = env.highlightedCode;\n\n			callback && callback.call(element);\n\n			_.hooks.run('after-highlight', env);\n			_.hooks.run('complete', env);\n		}\n	},\n\n	highlight: function (text, grammar, language) {\n		var tokens = _.tokenize(text, grammar);\n		return Token.stringify(_.util.encode(tokens), language);\n	},\n\n	tokenize: function(text, grammar, language) {\n		var Token = _.Token;\n\n		var strarr = [text];\n\n		var rest = grammar.rest;\n\n		if (rest) {\n			for (var token in rest) {\n				grammar[token] = rest[token];\n			}\n\n			delete grammar.rest;\n		}\n\n		tokenloop: for (var token in grammar) {\n			if(!grammar.hasOwnProperty(token) || !grammar[token]) {\n				continue;\n			}\n\n			var patterns = grammar[token];\n			patterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n			for (var j = 0; j < patterns.length; ++j) {\n				var pattern = patterns[j],\n					inside = pattern.inside,\n					lookbehind = !!pattern.lookbehind,\n					lookbehindLength = 0,\n					alias = pattern.alias;\n\n				pattern = pattern.pattern || pattern;\n\n				for (var i=0; i<strarr.length; i++) { // Don’t cache length as it changes during the loop\n\n					var str = strarr[i];\n\n					if (strarr.length > text.length) {\n						// Something went terribly wrong, ABORT, ABORT!\n						break tokenloop;\n					}\n\n					if (str instanceof Token) {\n						continue;\n					}\n\n					pattern.lastIndex = 0;\n\n					var match = pattern.exec(str);\n\n					if (match) {\n						if(lookbehind) {\n							lookbehindLength = match[1].length;\n						}\n\n						var from = match.index - 1 + lookbehindLength,\n							match = match[0].slice(lookbehindLength),\n							len = match.length,\n							to = from + len,\n							before = str.slice(0, from + 1),\n							after = str.slice(to + 1);\n\n						var args = [i, 1];\n\n						if (before) {\n							args.push(before);\n						}\n\n						var wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias);\n\n						args.push(wrapped);\n\n						if (after) {\n							args.push(after);\n						}\n\n						Array.prototype.splice.apply(strarr, args);\n					}\n				}\n			}\n		}\n\n		return strarr;\n	},\n\n	hooks: {\n		all: {},\n\n		add: function (name, callback) {\n			var hooks = _.hooks.all;\n\n			hooks[name] = hooks[name] || [];\n\n			hooks[name].push(callback);\n		},\n\n		run: function (name, env) {\n			var callbacks = _.hooks.all[name];\n\n			if (!callbacks || !callbacks.length) {\n				return;\n			}\n\n			for (var i=0, callback; callback = callbacks[i++];) {\n				callback(env);\n			}\n		}\n	}\n};\n\nvar Token = _.Token = function(type, content, alias) {\n	this.type = type;\n	this.content = content;\n	this.alias = alias;\n};\n\nToken.stringify = function(o, language, parent) {\n	if (typeof o == 'string') {\n		return o;\n	}\n\n	if (_.util.type(o) === 'Array') {\n		return o.map(function(element) {\n			return Token.stringify(element, language, o);\n		}).join('');\n	}\n\n	var env = {\n		type: o.type,\n		content: Token.stringify(o.content, language, parent),\n		tag: 'span',\n		classes: ['token', o.type],\n		attributes: {},\n		language: language,\n		parent: parent\n	};\n\n	if (env.type == 'comment') {\n		env.attributes['spellcheck'] = 'true';\n	}\n\n	if (o.alias) {\n		var aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n		Array.prototype.push.apply(env.classes, aliases);\n	}\n\n	_.hooks.run('wrap', env);\n\n	var attributes = '';\n\n	for (var name in env.attributes) {\n		attributes += (attributes ? ' ' : '') + name + '=\"' + (env.attributes[name] || '') + '\"';\n	}\n\n	return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\" ' + attributes + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n	if (!_self.addEventListener) {\n		// in Node.js\n		return _self.Prism;\n	}\n 	// In worker\n	_self.addEventListener('message', function(evt) {\n		var message = JSON.parse(evt.data),\n		    lang = message.language,\n		    code = message.code,\n		    immediateClose = message.immediateClose;\n\n		_self.postMessage(_.highlight(code, _.languages[lang], lang));\n		if (immediateClose) {\n			_self.close();\n		}\n	}, false);\n\n	return _self.Prism;\n}\n\n// Get current script and highlight\nvar script = document.getElementsByTagName('script');\n\nscript = script[script.length - 1];\n\nif (script) {\n	_.filename = script.src;\n\n	if (document.addEventListener && !script.hasAttribute('data-manual')) {\n		document.addEventListener('DOMContentLoaded', _.highlightAll);\n	}\n}\n\nreturn _self.Prism;\n\n})();\n\nif (typeof module !== 'undefined' && module.exports) {\n	module.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n	global.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n	'comment': /<!--[\\w\\W]*?-->/,\n	'prolog': /<\\?[\\w\\W]+?\\?>/,\n	'doctype': /<!DOCTYPE[\\w\\W]+?>/,\n	'cdata': /<!\\[CDATA\\[[\\w\\W]*?]]>/i,\n	'tag': {\n		pattern: /<\\/?[^\\s>\\/=.]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n		inside: {\n			'tag': {\n				pattern: /^<\\/?[^\\s>\\/]+/i,\n				inside: {\n					'punctuation': /^<\\/?/,\n					'namespace': /^[^\\s>\\/:]+:/\n				}\n			},\n			'attr-value': {\n				pattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,\n				inside: {\n					'punctuation': /[=>\"']/\n				}\n			},\n			'punctuation': /\\/?>/,\n			'attr-name': {\n				pattern: /[^\\s>\\/]+/,\n				inside: {\n					'namespace': /^[^\\s>\\/:]+:/\n				}\n			}\n\n		}\n	},\n	'entity': /&#?[\\da-z]{1,8};/i\n};\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n	if (env.type === 'entity') {\n		env.attributes['title'] = env.content.replace(/&amp;/, '&');\n	}\n});\n\nPrism.languages.xml = Prism.languages.markup;\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\nPrism.languages.css = {\n	'comment': /\\/\\*[\\w\\W]*?\\*\\//,\n	'atrule': {\n		pattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,\n		inside: {\n			'rule': /@[\\w-]+/\n			// See rest below\n		}\n	},\n	'url': /url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n	'selector': /[^\\{\\}\\s][^\\{\\};]*?(?=\\s*\\{)/,\n	'string': /(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n	'property': /(\\b|\\B)[\\w-]+(?=\\s*:)/i,\n	'important': /\\B!important\\b/i,\n	'function': /[-a-z0-9]+(?=\\()/i,\n	'punctuation': /[(){};:]/\n};\n\nPrism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);\n\nif (Prism.languages.markup) {\n	Prism.languages.insertBefore('markup', 'tag', {\n		'style': {\n			pattern: /(<style[\\w\\W]*?>)[\\w\\W]*?(?=<\\/style>)/i,\n			lookbehind: true,\n			inside: Prism.languages.css,\n			alias: 'language-css'\n		}\n	});\n	\n	Prism.languages.insertBefore('inside', 'attr-value', {\n		'style-attr': {\n			pattern: /\\s*style=(\"|').*?\\1/i,\n			inside: {\n				'attr-name': {\n					pattern: /^\\s*style/i,\n					inside: Prism.languages.markup.tag.inside\n				},\n				'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n				'attr-value': {\n					pattern: /.+/i,\n					inside: Prism.languages.css\n				}\n			},\n			alias: 'language-css'\n		}\n	}, Prism.languages.markup.tag);\n}\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n	'comment': [\n		{\n			pattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n			lookbehind: true\n		},\n		{\n			pattern: /(^|[^\\\\:])\\/\\/.*/,\n			lookbehind: true\n		}\n	],\n	'string': /([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n	'class-name': {\n		pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,\n		lookbehind: true,\n		inside: {\n			punctuation: /(\\.|\\\\)/\n		}\n	},\n	'keyword': /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n	'boolean': /\\b(true|false)\\b/,\n	'function': /[a-z0-9_]+(?=\\()/i,\n	'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,\n	'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n	'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n	'keyword': /\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/,\n	'number': /\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\n	// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n	'function': /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i\n});\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n	'regex': {\n		pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n		lookbehind: true\n	}\n});\n\nPrism.languages.insertBefore('javascript', 'class-name', {\n	'template-string': {\n		pattern: /`(?:\\\\`|\\\\?[^`])*`/,\n		inside: {\n			'interpolation': {\n				pattern: /\\$\\{[^}]+\\}/,\n				inside: {\n					'interpolation-punctuation': {\n						pattern: /^\\$\\{|\\}$/,\n						alias: 'punctuation'\n					},\n					rest: Prism.languages.javascript\n				}\n			},\n			'string': /[\\s\\S]+/\n		}\n	}\n});\n\nif (Prism.languages.markup) {\n	Prism.languages.insertBefore('markup', 'tag', {\n		'script': {\n			pattern: /(<script[\\w\\W]*?>)[\\w\\W]*?(?=<\\/script>)/i,\n			lookbehind: true,\n			inside: Prism.languages.javascript,\n			alias: 'language-javascript'\n		}\n	});\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n	if (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n		return;\n	}\n\n	self.Prism.fileHighlight = function() {\n\n		var Extensions = {\n			'js': 'javascript',\n			'html': 'markup',\n			'svg': 'markup',\n			'xml': 'markup',\n			'py': 'python',\n			'rb': 'ruby',\n			'ps1': 'powershell',\n			'psm1': 'powershell'\n		};\n\n		if(Array.prototype.forEach) { // Check to prevent error in IE8\n			Array.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n				var src = pre.getAttribute('data-src');\n\n				var language, parent = pre;\n				var lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\n				while (parent && !lang.test(parent.className)) {\n					parent = parent.parentNode;\n				}\n\n				if (parent) {\n					language = (pre.className.match(lang) || [, ''])[1];\n				}\n\n				if (!language) {\n					var extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n					language = Extensions[extension] || extension;\n				}\n\n				var code = document.createElement('code');\n				code.className = 'language-' + language;\n\n				pre.textContent = '';\n\n				code.textContent = 'Loading…';\n\n				pre.appendChild(code);\n\n				var xhr = new XMLHttpRequest();\n\n				xhr.open('GET', src, true);\n\n				xhr.onreadystatechange = function () {\n					if (xhr.readyState == 4) {\n\n						if (xhr.status < 400 && xhr.responseText) {\n							code.textContent = xhr.responseText;\n\n							Prism.highlightElement(code);\n						}\n						else if (xhr.status >= 400) {\n							code.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n						}\n						else {\n							code.textContent = '✖ Error: File does not exist or is empty';\n						}\n					}\n				};\n\n				xhr.send(null);\n			});\n		}\n\n	};\n\n	self.Prism.fileHighlight();\n\n})();\n"},function(n,e){n.exports='import {default as React, PropTypes} from "react";\n\nimport {PrismCode} from "../../../../src/index";\n\nconst CODE_LIST = [\n  {\n    className: "language-javascript",\n    codeBlock: require("raw-loader!prismjs/prism.js"),\n  },\n  {\n    className: "language-css",\n    codeBlock: require("raw-loader!../texts/prism.text"),\n  },\n  {\n    className: "language-markup",\n    codeBlock: require("raw-loader!../texts/markup.text"),\n  }\n];\n\nconst CODE_LIST_LENGTH = CODE_LIST.length;\n\nclass SelfUpdatedCode extends React.Component {\n\n  static get propTypes () {\n    return {\n      intervalMillis: React.PropTypes.number.isRequired,\n    };\n  }\n\n  constructor (...args) {\n    super(...args);\n    this.state = {\n      _index: 0,\n      _intervalId: null,\n    };\n  }\n\n  componentDidMount () {\n    this._setInterval();\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.intervalMillis !== this.props.intervalMillis) {\n      this._clearInterval();\n      this.setState({ _intervalId: null });\n    }\n  }\n\n  componentDidUpdate () {\n    this._setInterval();\n  }\n\n  componentWillUnmount () {\n    this._clearInterval();\n  }\n\n  _setInterval () {\n    if (this.state._intervalId !== null) {\n      return;\n    }\n    const _intervalId = setInterval(() => {\n      this.setState({_index: (this.state._index + 1) % CODE_LIST_LENGTH});\n    }, this.props.intervalMillis);\n    this.setState({ _intervalId });\n  }\n\n  _clearInterval () {\n    clearInterval(this.state._intervalId);\n  }\n\n  render () {\n    const {props, state} = this;\n    const {className, codeBlock} = CODE_LIST[state._index];\n    return (\n      <PrismCode className={className}>{codeBlock}</PrismCode>\n    );\n  }\n}\n\nexport default SelfUpdatedCode;\n'},function(n,e){n.exports='<!DOCTYPE html>\n<html lang="en">\n<head>\n\n<script>\n  // Just a lil’ script to show off that inline JS gets highlighted\n  window.console && console.log(\'foo\');\n</script>\n<meta charset="utf-8" />\n<link rel="shortcut icon" href="favicon.png" />\n<title>Prism</title>\n<link rel="stylesheet" href="style.css" />\n<link rel="stylesheet" href="themes/prism.css" data-noprefix />\n<script src="prefixfree.min.js"></script>\n\n<script>var _gaq = [[\'_setAccount\', \'UA-33746269-1\'], [\'_trackPageview\']];</script>\n<script src=\\"http://www.google-analytics.com/ga.js\\" async></script>\n</head>\n<body>\n</body>\n</html>\n'},function(n,e){n.exports='/**\n * prism.js default theme for JavaScript, CSS and HTML\n * Based on dabblet (http://dabblet.com)\n * @author Lea Verou\n */\n\ncode[class*="language-"],\npre[class*="language-"] {\n	color: black;\n	text-shadow: 0 1px white;\n	font-family: Consolas, Monaco, \'Andale Mono\', monospace;\n	direction: ltr;\n	text-align: left;\n	white-space: pre;\n	word-spacing: normal;\n	word-break: normal;\n	line-height: 1.5;\n\n	-moz-tab-size: 4;\n	-o-tab-size: 4;\n	tab-size: 4;\n\n	-webkit-hyphens: none;\n	-moz-hyphens: none;\n	-ms-hyphens: none;\n	hyphens: none;\n}\n\npre[class*="language-"]::-moz-selection, pre[class*="language-"] ::-moz-selection,\ncode[class*="language-"]::-moz-selection, code[class*="language-"] ::-moz-selection {\n	text-shadow: none;\n	background: #b3d4fc;\n}\n\npre[class*="language-"]::selection, pre[class*="language-"] ::selection,\ncode[class*="language-"]::selection, code[class*="language-"] ::selection {\n	text-shadow: none;\n	background: #b3d4fc;\n}\n\n@media print {\n	code[class*="language-"],\n	pre[class*="language-"] {\n		text-shadow: none;\n	}\n}\n\n/* Code blocks */\npre[class*="language-"] {\n	padding: 1em;\n	margin: .5em 0;\n	overflow: auto;\n}\n\n:not(pre) > code[class*="language-"],\npre[class*="language-"] {\n	background: #f5f2f0;\n}\n\n/* Inline code */\n:not(pre) > code[class*="language-"] {\n	padding: .1em;\n	border-radius: .3em;\n}\n\n.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata {\n	color: slategray;\n}\n\n.token.punctuation {\n	color: #999;\n}\n\n.namespace {\n	opacity: .7;\n}\n\n.token.property,\n.token.tag,\n.token.boolean,\n.token.number,\n.token.constant,\n.token.symbol,\n.token.deleted {\n	color: #905;\n}\n\n.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted {\n	color: #690;\n}\n\n.token.operator,\n.token.entity,\n.token.url,\n.language-css .token.string,\n.style .token.string {\n	color: #a67f59;\n	background: hsla(0, 0%, 100%, .5);\n}\n\n.token.atrule,\n.token.attr-value,\n.token.keyword {\n	color: #07a;\n}\n\n.token.function {\n	color: #DD4A68;\n}\n\n.token.regex,\n.token.important,\n.token.variable {\n	color: #e90;\n}\n\n.token.important {\n	font-weight: bold;\n}\n\n.token.entity {\n	cursor: help;\n}\n'},function(n,e){n.exports=require("react-github-fork-ribbon")},function(n,e){n.exports=require("react-pure-render/function")}]);